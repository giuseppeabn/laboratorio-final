name: Examen Final

on:
  push:


jobs:
  BUILD:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.17.0'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Instalar dependencias (si no están instaladas)
        run: npm install

      - name: Compilar y empaquetar
        run: |
          npm run build

      - name: Upload build output
        uses: actions/upload-artifact@master
        with:
          name: build-artifact
          path: ${{ github.workspace }}/.next
          include-hidden-files: true
# -----------------------------------------------------------------------
# ------------------------ ANALISIS SAST --------------------------------
# -----------------------------------------------------------------------
  SAST:
    needs: BUILD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@master
        with:
          name: build-artifact
          path: ${{ github.workspace }}/.next
          include-hidden-files: true

      - name: Validando existencia del proyecto en Sonar
        run: |
          response=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" -X POST 'https://sonarcloud.io/api/projects/create' \
          -d "name=${{ github.event.repository.name }}" \
          -d "organization=giuseppeabn" \
          -d "project=${{ github.event.repository.name }}" \
          -d "visibility=public")

          echo "Respuesta de Sonar: $response"

          if echo "$response" | grep -q "key already exists"; then
            echo "El proyecto ya existe en SonarCloud"
          else
            echo "Proyecto creado exitosamente en SonarCloud"
            rename_response=$(curl -s -X POST -u "${{ secrets.SONAR_TOKEN }}:" 'https://sonarcloud.io/api/project_branches/rename' \
            -d "name=main" \
            -d "project=${{ github.event.repository.name }}")

            echo "Respuesta de Rename: $rename_response"

            if echo "$rename_response" | grep -q "doesn't exist"; then
              echo "Error al renombrar rama"
            else
              echo "Rename exitoso"
            fi
          fi

      - name: Ejecutar análisis SonarCloud
        run: |
          npx sonarqube-scanner \
            -Dsonar.projectKey=giuseppeabn_laboratorio-final \
            -Dsonar.organization=giuseppeabn \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.branch.name=main


      - name: Validando resultado de SonarCloud
        run: |
          projectKey="giuseppeabn_laboratorio-final"
          branchName="main"
      
          issueCount=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
            "https://sonarcloud.io/api/issues/search?componentKeys=${projectKey}&branch=${branchName}&types=VULNERABILITY&severities=BLOCKER,CRITICAL,MAJOR" \
            | jq '.total')

          echo "Vulnerabilidades críticas/altas/medias encontradas: $issueCount"

          if [ "$issueCount" -gt 0 ]; then
            echo "Se encontraron vulnerabilidades críticas, altas o medias. Deteniendo el pipeline..."
      
          else
            echo "No se encontraron vulnerabilidades críticas, altas ni medias. Continuando..."
          fi

# -----------------------------------------------------------------------
# ------------------------ ANALISIS SCA ---------------------------------
# -----------------------------------------------------------------------

  SCA:
    needs: BUILD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@master
        with:
          name: build-artifact
          path: ${{ github.workspace }}/.next
          include-hidden-files: true

      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@1.1.0
        env:
          JAVA_HOME: /opt/jdk
        with:
          project: '${{ github.event.repository.name }}'
          path: '.'
          format: 'ALL'
          out: 'reports'
          args: >
            --failOnCVSS 7
            --enableRetired

      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@master
        with:
          name: dependecy-check-report
          path: ${{ github.workspace }}/reports

      - name: Validar resultado Dependency Check
        run: |
          report="reports/dependency-check-report.json"

          if [ ! -f "$report" ]; then
            echo "No se encontró el reporte de Dependency Check. Falla el análisis SCA."
            exit 1
          fi

          # SEVERIDAD
          critical=$(jq '[.dependencies[].vulnerabilities[]? | select(.severity == "high")] | length' "$report")
          high=$(jq '[.dependencies[].vulnerabilities[]? | select(.severity == "high")] | length' "$report")
          medium=$(jq '[.dependencies[].vulnerabilities[]? | select(.severity == "moderate")] | length' "$report")

          echo "Vulnerabilidades críticas/alta encontradas: $critical"
          echo "Vulnerabilidades medias encontradas: $medium"

          if [ "$critical" -gt 0 ] || [ "$high" -gt 0 ] || [ "$medium" -gt 0 ]; then
            echo "Se encontraron vulnerabilidades Críticas, Altas o Medias en dependencias."
            echo ">>>>>>>>>> Pipeline detenido <<<<<<<<<<<"
          else
            echo "No se encontraron vulnerabilidades críticas, altas ni medias"
            echo ">>>>>>>>>> finalizacion SCA <<<<<<<<<<<"
          fi

# -----------------------------------------------------------------------
# ------------------------ DOCKER BUILD ---------------------------------
# -----------------------------------------------------------------------

  DockerBuild:
    needs: BUILD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@master
        with:
          name: build-artifact
          path: ${{ github.workspace }}/.next
          include-hidden-files: true

      - name: Build Docker Image
        run: |
          docker build --tag giuseppeabn/laboratorio:latest .

      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: |
         docker push giuseppeabn/laboratorio:latest


# -----------------------------------------------------------------------
# ------------------------ ANALISIS DAST --------------------------------
# -----------------------------------------------------------------------

  DAST:
    needs: DockerBuild
    runs-on: self-hosted
    steps:
      - name: Crear red Docker
        run: |
          docker network rm zap-net || true
          docker network create zap-net

      - name: Desplegar App
        run: |
          docker run -d \
            --rm \
            --network zap-net \
            --name reddit-clone-yt \
            -p 3000:3000 \
            giuseppeabn/laboratorio:latest

      - name: Esperar que la aplicación esté lista
        run: |
          for i in {1..12}; do
            if curl -s http://localhost:3000 > /dev/null; then
              echo "running"
              exit 0
            fi
            echo ">>>>>>>>>> WAIT APP <<<<<<<<<<<"
            sleep 5
          done
          echo ">>>>>>>>>> TIMEOUT <<<<<<<<<<<"
          exit 1

      - name: Scan with OWASP ZAP
        run: |
          docker run --rm \
          --network zap-net \
          -v ${{ github.workspace }}:/zap/wrk/:rw \
          ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
          -t http://reddit-clone-yt:3000/ \
          -J report_json.json -w report_md.md -r report_html.html \
          -I

      - name: Mover reportes de ZAP al directorio reports
        run: |
          mkdir -p reports
          mv report_*.json reports/ || true
          mv report_*.md reports/ || true
          mv report_*.html reports/ || true

      - name: Upload OWASP ZAP Report
        uses: actions/upload-artifact@master
        with:
          name: owasp-zap-report
          path: ${{ github.workspace }}/reports

      - name: Validar resultado de OWASP ZAP
        run: |
          if [ ! -f report_json.json ]; then
            echo "No se encontró el archivo report_json.json. Falla el análisis DAST."
            exit 1
          fi

          highAlerts=$(jq '[.site[].alerts[] | select(.riskdesc | test("High"))] | length' report_json.json)
          mediumAlerts=$(jq '[.site[].alerts[] | select(.riskdesc | test("Medium"))] | length' report_json.json)

          echo "Alertas High: $highAlerts"
          echo "Alertas Medium: $mediumAlerts"

          if [ "$highAlerts" -gt 0 ] || [ "$mediumAlerts" -gt 0 ]; then
            echo "Se encontraron vulnerabilidades críticas o medias en OWASP ZAP"
            echo ">>>>>>>>>> Pipeline detenido por vulnerabilidades encontradas <<<<<<<<<<<"

            exit 1
          else
            echo "No se encontraron vulnerabilidades críticas ni medias en OWASP ZAP"
            echo ">>>>>>>>>> Siguiente analisis <<<<<<<<<<<"

          fi

# -----------------------------------------------------------------------
# --------------------------- DEPLOY ------------------------------------
# -----------------------------------------------------------------------
  DEPLOY:
    needs: [ ImageSecurity, DAST, SCA, SAST ]
    runs-on: self-hosted
    steps:
      - name: Desplegar aplicación
        run: echo "Deploy"