name: DevSecOps Pipeline

on:
  push:
    branches:
      - devsecops-pipeline

jobs:
  sast:
    name: Análisis SAST (SonarCloud)
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
              -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }}
              -Dsonar.organization=${{ github.repository_owner }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  sca:
    name: Análisis SCA (Dependency Check)
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3

      - name: Instalar dependencias Node
        run: npm install

      - name: Ejecutar Dependency Check
        run: |
          mkdir -p dependency-check-report
          docker run --rm -v "$GITHUB_WORKSPACE:/src" owasp/dependency-check \
            --scan /src \
            --format "ALL" \
            --out /src/dependency-check-report \
            --failOnCVSS 5.0


  build:
    name: Construcción de Imagen Docker
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3

      - name: Construir imagen
        run: docker build -t movies-app .

  image-security:
    name: Análisis de Seguridad de Imagen (Trivy)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3

      - name: Construir imagen (requerido para análisis)
        run: docker build -t movies-app .

      - name: Análisis con Trivy
        #run: |
           #docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --exit-code 1 --severity CRITICAL,HIGH,MEDIUM movies-app
        run: |
           docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --severity CRITICAL,HIGH,MEDIUM movies-app || true


  deploy:
    name: Despliegue Local
    runs-on: ubuntu-latest
    needs: image-security
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3

      - name: Construir imagen
        run: docker build -t movies-app .

      - name: Desplegar en Docker
        run: docker run -d -p 8080:8080 movies-app

  dast:
    name: Análisis DAST (OWASP ZAP)
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: OWASP ZAP Scan
        run: |
          docker run -t owasp/zap2docker-stable zap-baseline.py -t http://localhost:8080 -r zap_report.html || true
