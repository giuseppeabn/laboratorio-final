name: Examen Final

on:
  push:


jobs:
  BUILD:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.17.0'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Instalar dependencias (si no están instaladas)
        run: npm install

      - name: Compilar y empaquetar
        run: |
          npm run build

      - name: Upload build output
        uses: actions/upload-artifact@master
        with:
          name: build-artifact
          path: ${{ github.workspace }}/.next
          include-hidden-files: true
  SAST:
    needs: BUILD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@master
        with:
          name: build-artifact
          path: ${{ github.workspace }}/.next
          include-hidden-files: true

      - name: Validando existencia del proyecto en Sonar
        run: |
          response=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" -X POST 'https://sonarcloud.io/api/projects/create' \
          -d "name=${{ github.event.repository.name }}" \
          -d "organization=giuseppeabn" \
          -d "project=${{ github.event.repository.name }}" \
          -d "visibility=public")

          echo "Respuesta de Sonar: $response"

          if echo "$response" | grep -q "key already exists"; then
            echo "El proyecto ya existe en SonarCloud"
          else
            echo "Proyecto creado exitosamente en SonarCloud"
            rename_response=$(curl -s -X POST -u "${{ secrets.SONAR_TOKEN }}:" 'https://sonarcloud.io/api/project_branches/rename' \
            -d "name=main" \
            -d "project=${{ github.event.repository.name }}")

            echo "Respuesta de Rename: $rename_response"

            if echo "$rename_response" | grep -q "doesn't exist"; then
              echo "Error al renombrar rama"
            else
              echo "Rename exitoso"
            fi
          fi

      - name: Ejecutar análisis SonarCloud
        run: |
          npx sonarqube-scanner \
            -Dsonar.projectKey=giuseppeabn_laboratorio-final \
            -Dsonar.organization=giuseppeabn \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.branch.name=main


      - name: Validando resultado de SonarCloud
        run: |
          projectKey="giuseppeabn_laboratorio-final"
          branchName="main"
      
          issueCount=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
            "https://sonarcloud.io/api/issues/search?componentKeys=${projectKey}&branch=${branchName}&types=VULNERABILITY&severities=BLOCKER,CRITICAL,MAJOR" \
            | jq '.total')

          echo "Vulnerabilidades críticas/altas/medias encontradas: $issueCount"

          if [ "$issueCount" -gt 0 ]; then
            echo "Se encontraron vulnerabilidades críticas, altas o medias. Deteniendo el pipeline..."
            exit 1
          else
            echo "No se encontraron vulnerabilidades críticas, altas ni medias. Continuando..."
          fi

# -----------------------------------------------------------------------
# ------------------------ ANALISIS SCA ---------------------------------
# -----------------------------------------------------------------------

  SCA:
    needs: BUILD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@master
        with:
          name: build-artifact
          path: ${{ github.workspace }}/.next
          include-hidden-files: true

      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@1.1.0
        env:
          JAVA_HOME: /opt/jdk
        with:
          project: '${{ github.event.repository.name }}'
          path: '.'
          format: 'ALL'
          out: 'reports'
          args: >
            --failOnCVSS 7
            --enableRetired

      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@master
        with:
          name: dependecy-check-report
          path: ${{ github.workspace }}/reports

      - name: Validar resultado Dependency Check
        run: |
          report="reports/dependency-check-report.json"

          if [ ! -f "$report" ]; then
            echo "No se encontró el reporte de Dependency Check. Falla el análisis SCA."
            exit 1
          fi

          # SEVERIDAD
          critical=$(jq '[.dependencies[].vulnerabilities[]? | select(.severity == "high")] | length' "$report")
          high=$(jq '[.dependencies[].vulnerabilities[]? | select(.severity == "high")] | length' "$report")
          medium=$(jq '[.dependencies[].vulnerabilities[]? | select(.severity == "moderate")] | length' "$report")

          echo "Vulnerabilidades críticas/alta encontradas: $critical"
          echo "Vulnerabilidades medias encontradas: $medium"

          if [ "$critical" -gt 0 ] || [ "$high" -gt 0 ] || [ "$medium" -gt 0 ]; then
            echo "Se encontraron vulnerabilidades Críticas, Altas o Medias en dependencias."
            echo ">>>>>>>>>> Pipeline detenido <<<<<<<<<<<"
            exit 1
          else
            echo "No se encontraron vulnerabilidades críticas, altas ni medias"
            echo ">>>>>>>>>> finalizacion SCA <<<<<<<<<<<"
          fi